{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","Cardlist","monsters","map","m","SearchBox","placeholder","handleChange","type","onChange","App","props","e","console","log","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAaeA,EAVF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACA,qBAAMC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACrB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCMHC,G,MAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAiBV,QAAUU,GAAhBA,EAAEN,WCMbO,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BDG,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRJ,aAAe,SAACK,GACdC,QAAQC,IAAR,gBACA,EAAKC,SAAS,CAAEC,YAAaJ,EAAEK,OAAOC,SAZtC,EAAKC,MAAQ,CACXjB,SAAU,GACVc,YAAa,IAJE,E,qDAOnB,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEb,SAAUsB,Y,oBAO9D,WAAU,IAAD,EAC2BC,KAAKN,MAA/BjB,EADD,EACCA,SAAUc,EADX,EACWA,YACZU,EAAmBxB,EAASyB,QAAO,SAACjC,GAAD,OACvCA,EAAQK,KAAK6B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAckB,KAAKlB,eAErB,cAAC,EAAD,CAAUL,SAAUwB,W,GA7BVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.070642c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className='card-container'>\r\n    <img  alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=150x150`}/>\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nconst Cardlist = ({ monsters }) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {monsters.map((m) => {\r\n        return <Card key={m.id} monster= {m}/>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cardlist;\r\n","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Cardlist from './components/card-list/card-list.component';\nimport SearchBox from './components/searchbox/searchbox.component';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then((response) =>\n      response.json().then((users) => this.setState({ monsters: users }))\n    );\n  }\n  handleChange = (e) => {\n    console.log(this);\n    this.setState({ searchField: e.target.value });\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n      <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder='search Monster'\n          handleChange={this.handleChange}\n        />\n        <Cardlist monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}